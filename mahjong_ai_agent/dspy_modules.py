"""DSPyを使った麻雀問題生成の共通モジュール（完全分離版）"""
import dspy


class MahjongQuestionSignature(dspy.Signature):
    """麻雀の点数計算問題の問題文を生成するシグネチャ（構造化データはBAMLが担当）"""

    difficulty = dspy.InputField(
        desc="問題の難易度 (easy, medium, hard)"
    )
    variation_hint = dspy.InputField(
        desc="問題のバリエーションヒント（多様性を持たせるための追加情報）",
        default=""
    )
    question = dspy.OutputField(
        desc="""麻雀の点数計算問題の問題文。できるだけユニークで多様な状況を作成してください。

問題文には必ず以下の情報を含めてください：
1. 場の状態（東場/南場、本場数、自風）
2. ドラ情報（ドラ表示牌とドラ）
3. 和了方法（ツモ/ロン）
4. **手牌の具体的な牌構成（例：1m, 2m, 3m, 4p, 5p, 6p...）を明記**
   - **重要: 手牌には和了牌を含めて14枚にしてください**
   - 和了牌も手牌の一部として記載する必要があります
5. 鳴きがある場合は、その内容（ポン/チー/カンと牌の種類）も明記
6. 和了牌を明示（この牌は手牌にも含まれている必要があります）
7. 求めるもの（最終的な得点）

**麻雀の和了形のパターン（必読）:**
麻雀には以下の和了形があります：

パターン1: 通常の和了形（4面子1雀頭）
- 面子（メンツ）: 順子(123mなど連続3枚)または刻子(111mなど同じ牌3枚) × 4組
  **重要**: 順子は数牌(1-9m, 1-9p, 1-9s)のみ。字牌(1z-7z)は順子を作れません！
  字牌で面子を作る場合は必ず刻子（同じ牌3枚）にしてください。
- 雀頭（ジャントウ）: 同じ牌2枚 × 1組
- 合計: 3×4 + 2 = 14枚

パターン2: 七対子（チートイツ）
- 同じ牌2枚のペア × 7組
- 合計: 2×7 = 14枚
- これ自体が役になります

パターン3: 国士無双（コクシムソウ）
- 么九牌13種類（1m,9m,1p,9p,1s,9s,1z,2z,3z,4z,5z,6z,7z）を各1枚+どれか1枚
- 合計: 14枚
- これ自体が役満になります

**手牌を作成する手順（通常の和了形の場合）:**
1. まず雀頭を決める（同じ牌2枚、例: 1m1m）
2. 次に4つの面子を決める：
   - 順子の例: 123m, 456p, 789s
   - 刻子の例: 111m, 555z, 777p
3. 和了牌は既に手牌に含まれている牌から選ぶ
4. 役を決める（下記参照）

**重要: 必ず役（ヤク）がある手牌を作成してください。役なしの手牌は無効です。**

役の例:
- easy: タンヤオ（2-8のみの牌、鳴きなし）、役牌（5z=白, 6z=発, 7z=中を3枚）、リーチ
- medium: 複数役の組み合わせ、ピンフ、イーペーコー、ドラ
- hard: 三色同順、一気通貫、七対子、対々和、カン、特殊役

良い例1（タンヤオのみ、鳴きなし）:
「東場0本場、あなたは東家。ドラ表示牌は3m（ドラは4m）。ツモで和了しました。
手牌は以下の通り：2m, 3m, 4m, 5m, 6m, 7m, 2p, 3p, 4p, 5s, 6s, 7s, 8s, 8s
和了牌は8s。最終的な得点を計算してください。」
→ 構成: [2m3m4m][5m6m7m][2p3p4p][5s6s7s][8s8s] = 4面子1雀頭 ✓

良い例2（役牌のみ）:
「南場1本場、あなたは南家。ドラ表示牌は9m（ドラは1m）。ツモで和了しました。
手牌は以下の通り：1m, 2m, 3m, 4p, 5p, 6p, 5z, 5z, 5z, 6s, 7s, 8s, 9s, 9s
和了牌は9s。最終的な得点を計算してください。」
→ 構成: [1m2m3m][4p5p6p][5z5z5z][6s7s8s][9s9s] = 4面子1雀頭 ✓（5z=白は役牌）

良い例3（役牌2つ、鳴きあり）:
「東場0本場、あなたは東家。ドラ表示牌は1z（ドラは2z）。ツモで和了しました。
手牌は以下の通り：5z, 5z, 5z, 6z, 6z, 6z, 2m, 3m, 4m, 5s, 5s
5pをポン。
和了牌は5s。最終的な得点を計算してください。」
→ 構成: [5z5z5z][6z6z6z][2m3m4m][5p5p5p(ポン)][5s5s] = 4面子1雀頭 ✓（5z=白, 6z=発は役牌）

良い例4（七対子）:
「東場0本場、あなたは東家。ドラ表示牌は3m（ドラは4m）。ツモで和了しました。
手牌は以下の通り：1m, 1m, 3m, 3m, 5m, 5m, 2p, 2p, 4p, 4p, 6s, 6s, 8s, 8s
和了牌は8s。最終的な得点を計算してください。」
→ 構成: [1m1m][3m3m][5m5m][2p2p][4p4p][6s6s][8s8s] = 7対子 ✓（七対子は役）

良い例5（国士無双）:
「東場0本場、あなたは東家。ドラ表示牌は5m（ドラは6m）。ツモで和了しました。
手牌は以下の通り：1m, 9m, 1p, 9p, 1s, 9s, 1z, 2z, 3z, 4z, 5z, 6z, 7z, 1m
和了牌は1m。最終的な得点を計算してください。」
→ 構成: 13種類の么九牌+1枚 ✓（国士無双は役満）

このように、具体的な牌を列挙して、誰が見ても手牌の内容が分かるようにしてください。

**最重要ルール:**
1. 手牌は必ず和了牌を含めて正確に14枚を明記してください
2. 和了牌は必ず手牌の中に既に存在する牌から選んでください
3. 例えば、手牌に「5z, 5z, 5z」があれば、和了牌として「5z」を選べます
4. 手牌に存在しない牌を和了牌として指定しないでください
"""
    )


class MahjongQuestionModule(dspy.Module):
    """DSPyを使った麻雀問題生成モジュール（問題文のみ）"""

    def __init__(self):
        super().__init__()
        self.generate = dspy.ChainOfThought(MahjongQuestionSignature)

    def forward(self, difficulty: str, variation_hint: str = ""):
        result = self.generate(difficulty=difficulty, variation_hint=variation_hint)
        return dspy.Prediction(
            question=result.question,
        )


class LLMJudge(dspy.Signature):
    """生成された麻雀問題の品質を評価する"""

    assessed_question = dspy.InputField(desc="評価対象の問題文")
    assessment_question = dspy.InputField(
        desc="評価のための質問（例：この問題は正しい和了形になっていますか？）"
    )

    assessment_answer = dspy.OutputField(
        desc="評価結果（Yes/No）とその理由を含む回答"
    )
